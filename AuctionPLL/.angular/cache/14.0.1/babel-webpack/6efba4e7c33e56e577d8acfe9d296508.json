{"ast":null,"code":"import { trigger, state, style, transition, animate } from '@angular/animations';\nimport { HttpEventType } from '@angular/common/http';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { CommonConstants } from 'src/app/common/constants/common-constants';\nimport { ErrorMessages } from 'src/app/common/constants/error-messages';\nimport { Images } from 'src/app/models/lot-models/images';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/lot.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/services/images.service\";\nimport * as i6 from \"src/app/services/auth.service\";\nimport * as i7 from \"src/app/services/author-description.service\";\nimport * as i8 from \"../../../../common/tooltip/tooltip.directive\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"ngx-textarea-autosize\";\nconst _c0 = [\"file\"];\n\nfunction UpdateLotFormComponent_form_7_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Min length 5 is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Max length is 35 symbols\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Min length 10 is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Max length is 70 symbols\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Enter correct year\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Min value 1806\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.deleteMainPhoto());\n    });\n    i0.ɵɵtext(1, \"Delete photo\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_img_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 30);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r12.createImgPath(ctx_r12.lotForm.controls.image.value), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_button_28_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      i0.ɵɵnextContext();\n\n      const _r13 = i0.ɵɵreference(27);\n\n      return i0.ɵɵresetView(_r13.click());\n    });\n    i0.ɵɵtext(1, \"Add main image\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_div_30_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_div_30_a_3_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const i_r21 = i0.ɵɵnextContext().index;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.deletePhotoByPath(ctx_r27.lotForm.controls[\"images\"].at(i_r21).value, i_r21));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_div_30_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_div_30_a_5_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const i_r21 = i0.ɵɵnextContext().index;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.removeImage(i_r21));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_div_30_img_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 30);\n  }\n\n  if (rf & 2) {\n    const i_r21 = i0.ɵɵnextContext().index;\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r24.createImgPath(ctx_r24.lotForm.controls[\"images\"].at(i_r21).value), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_div_30_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_div_30_div_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      i0.ɵɵnextContext();\n\n      const _r25 = i0.ɵɵreference(8);\n\n      return i0.ɵɵresetView(_r25.click());\n    });\n    i0.ɵɵtext(2, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"div\", 34);\n    i0.ɵɵtemplate(3, UpdateLotFormComponent_form_7_div_30_a_3_Template, 2, 0, \"a\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 34);\n    i0.ɵɵtemplate(5, UpdateLotFormComponent_form_7_div_30_a_5_Template, 2, 0, \"a\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UpdateLotFormComponent_form_7_div_30_img_6_Template, 1, 1, \"img\", 19);\n    i0.ɵɵelementStart(7, \"input\", 35, 21);\n    i0.ɵɵlistener(\"change\", function UpdateLotFormComponent_form_7_div_30_Template_input_change_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r37);\n      const i_r21 = restoredCtx.index;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.uploadImages($event, i_r21));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, UpdateLotFormComponent_form_7_div_30_div_9_Template, 3, 0, \"div\", 36);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r21 = ctx.index;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n  }\n}\n\nfunction UpdateLotFormComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 8)(1, \"div\", 9)(2, \"div\", 10);\n    i0.ɵɵelement(3, \"input\", 11);\n    i0.ɵɵtemplate(4, UpdateLotFormComponent_form_7_p_4_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(5, UpdateLotFormComponent_form_7_p_5_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(6, UpdateLotFormComponent_form_7_p_6_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"div\", 10);\n    i0.ɵɵelement(9, \"textarea\", 13);\n    i0.ɵɵtemplate(10, UpdateLotFormComponent_form_7_p_10_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(11, UpdateLotFormComponent_form_7_p_11_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(12, UpdateLotFormComponent_form_7_p_12_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 9);\n    i0.ɵɵelement(14, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 9);\n    i0.ɵɵelement(16, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 9)(18, \"div\", 10);\n    i0.ɵɵelement(19, \"input\", 16);\n    i0.ɵɵtemplate(20, UpdateLotFormComponent_form_7_p_20_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(21, UpdateLotFormComponent_form_7_p_21_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(22, UpdateLotFormComponent_form_7_p_22_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 17);\n    i0.ɵɵtemplate(24, UpdateLotFormComponent_form_7_button_24_Template, 2, 0, \"button\", 18);\n    i0.ɵɵtemplate(25, UpdateLotFormComponent_form_7_img_25_Template, 1, 1, \"img\", 19);\n    i0.ɵɵelementStart(26, \"input\", 20, 21);\n    i0.ɵɵlistener(\"change\", function UpdateLotFormComponent_form_7_Template_input_change_26_listener() {\n      i0.ɵɵrestoreView(_r39);\n\n      const _r13 = i0.ɵɵreference(27);\n\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.uploadMainImage(_r13.files));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, UpdateLotFormComponent_form_7_button_28_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 23);\n    i0.ɵɵtemplate(30, UpdateLotFormComponent_form_7_div_30_Template, 10, 4, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 25)(32, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.addImage());\n    });\n    i0.ɵɵtext(33, \"Add Image\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 27)(35, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_7_Template_button_click_35_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.updateLot());\n    });\n    i0.ɵɵtext(36, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.lotForm)(\"@toggle\", ctx_r0.isCollapsedForm ? \"hide\" : \"show\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.nameLot.errors == null ? null : ctx_r0.lotForm.controls.nameLot.errors.required) && ctx_r0.lotForm.controls.nameLot.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.nameLot.errors == null ? null : ctx_r0.lotForm.controls.nameLot.errors.minlength) && ctx_r0.lotForm.controls.nameLot.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.nameLot.errors == null ? null : ctx_r0.lotForm.controls.nameLot.errors.maxlength) && ctx_r0.lotForm.controls.nameLot.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.description.errors == null ? null : ctx_r0.lotForm.controls.description.errors.required) && ctx_r0.lotForm.controls.description.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.description.errors == null ? null : ctx_r0.lotForm.controls.description.errors.minlength) && ctx_r0.lotForm.controls.description.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.description.errors == null ? null : ctx_r0.lotForm.controls.description.errors.maxlength) && ctx_r0.lotForm.controls.description.touched);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.year.errors == null ? null : ctx_r0.lotForm.controls.year.errors.required) && ctx_r0.lotForm.controls.year.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.year.errors == null ? null : ctx_r0.lotForm.controls.year.errors.pattern) && ctx_r0.lotForm.controls.year.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.lotForm.controls.year.errors == null ? null : ctx_r0.lotForm.controls.year.errors.min) && ctx_r0.lotForm.controls.year.touched);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.lotForm.controls.image.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.lotForm.controls.image.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.lotForm.controls.image.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.imageArray.controls);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.lotForm.invalid);\n  }\n}\n\nfunction UpdateLotFormComponent_form_14_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_14_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Min length 10 is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateLotFormComponent_form_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 8)(1, \"div\", 9)(2, \"div\", 10);\n    i0.ɵɵelement(3, \"textarea\", 38);\n    i0.ɵɵtemplate(4, UpdateLotFormComponent_form_14_p_4_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(5, UpdateLotFormComponent_form_14_p_5_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 27)(7, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_form_14_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.createAuthorDescription());\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.authorForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.authorForm.controls.description.errors == null ? null : ctx_r1.authorForm.controls.description.errors.required) && ctx_r1.authorForm.controls.description.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.authorForm.controls.description.errors == null ? null : ctx_r1.authorForm.controls.description.errors.minlength) && ctx_r1.authorForm.controls.description.touched);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.authorForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(!!ctx_r1.isNewDescription ? \"Create\" : \"Update\");\n  }\n}\n\nexport let UpdateLotFormComponent = /*#__PURE__*/(() => {\n  class UpdateLotFormComponent {\n    constructor(toastrService, lotService, activateRoute, formBuilder, formBuilder1, router, imagesService, authService, authorDescriptionService) {\n      this.toastrService = toastrService;\n      this.lotService = lotService;\n      this.activateRoute = activateRoute;\n      this.formBuilder = formBuilder;\n      this.formBuilder1 = formBuilder1;\n      this.router = router;\n      this.imagesService = imagesService;\n      this.authService = authService;\n      this.authorDescriptionService = authorDescriptionService;\n      this.isCollapsedForm = false;\n      this.isCollapsedAuthorOpinion = !false;\n      this.saved = false;\n      this.isNewDescription = false;\n    }\n\n    get imageArray() {\n      return this.lotForm.get('images');\n    }\n\n    ngOnInit() {\n      this.routeId = this.activateRoute.snapshot.params['id'];\n      this.lotService.getLotById(this.routeId).subscribe(_ => {\n        this.lot = _;\n        this.initForm(_);\n      });\n      this.authorDescriptionService.getAuthorDescriptionByLotId(this.routeId).subscribe(_ => {\n        this.initAuthorDescriptionForm(_);\n      });\n    }\n\n    initForm(lot) {\n      this.lotForm = this.formBuilder.group({\n        nameLot: [lot.nameLot, [Validators.required, Validators.minLength(5), Validators.maxLength(35)]],\n        description: [lot.description, [Validators.required, Validators.minLength(10), Validators.maxLength(70)]],\n        startPrice: [lot.startPrice],\n        currentPrice: [lot.currentPrice],\n        year: [lot.year, [Validators.required, Validators.pattern('[0-9]{4}'), Validators.min(1806)]],\n        image: [lot.image, Validators.required],\n        images: this.formBuilder.array(this.initImages(lot.images))\n      });\n    }\n\n    initAuthorDescriptionForm(authorDescription) {\n      this.authorDescription = authorDescription;\n      const description = !!authorDescription?.description ? authorDescription?.description : null;\n      this.isNewDescription = !description;\n      this.authorForm = this.formBuilder1.group({\n        description: [description, [Validators.required, Validators.minLength(20)]]\n      });\n    }\n\n    createAuthorDescription() {\n      const description = this.authorForm.controls.description.value;\n\n      if (this.isNewDescription) {\n        this.authorDescription = {\n          id: 0,\n          userId: this.authService.getUserIdFromToken(),\n          lotId: parseInt(this.routeId.toString()),\n          description: description\n        };\n        this.authorDescriptionService.addAuthorDescription(this.authorDescription).subscribe(_ => {\n          this.toastrService.success('Author Description is created');\n          this.saved = true;\n          this.router.navigate(['userlots']);\n        }, _ => this.toastrService.error(ErrorMessages.Error));\n      } else {\n        this.authorDescriptionService.updateAuthorDescription({ ...this.authorDescription,\n          description\n        }).subscribe(_ => {\n          this.toastrService.success('Author Description is updated');\n          this.saved = true;\n          this.router.navigate(['userlots']);\n        }, _ => this.toastrService.error(ErrorMessages.Error));\n      }\n    }\n\n    initImages(images) {\n      const array = [];\n\n      for (let i = 0; i < this.lotService.numbersOfImages; i++) {\n        array.push(images['image' + (i + 1)]);\n      }\n\n      return array;\n    }\n\n    addImage() {\n      if (this.lotService.numbersOfImages !== this.imageArray.controls.length) {\n        this.imageArray.push(new UntypedFormControl(null, [Validators.required]));\n      }\n    }\n\n    removeImage(index) {\n      this.imageArray.removeAt(index);\n      this.lotForm.markAsDirty();\n    }\n\n    updateLot() {\n      this.lot = { ...this.lot,\n        ...this.lotForm.value,\n        user: null,\n        lotState: null,\n        images: this.getImages(this.lot)\n      };\n      this.lotService.updateLot(this.lot).subscribe(_ => {\n        this.toastrService.success('Lot is updated');\n        this.saved = true;\n        this.router.navigate(['userlots']);\n      }, _ => this.toastrService.error(ErrorMessages.Error));\n    }\n\n    getImages(lot) {\n      let images = new Images();\n      images.id = this.lot.id;\n      let index = 0;\n\n      for (let image of this.lotForm.controls.images.value) {\n        images['image' + (index + 1)] = image;\n        index++;\n      }\n\n      return images;\n    }\n\n    canDeactivate() {\n      if (!this.saved) {\n        return confirm('Are you want to leave the page?');\n      } else {\n        return true;\n      }\n    }\n\n    toggleForm() {\n      this.isCollapsedForm = !this.isCollapsedForm;\n    }\n\n    toggleAuthorOpinion() {\n      this.isCollapsedAuthorOpinion = !this.isCollapsedAuthorOpinion;\n    }\n\n    createImgPath(serverPath) {\n      return this.lotService.createImgPath(serverPath);\n    }\n\n    uploadMainImage(files) {\n      if (files.length === 0) return;\n      this.imagesService.uploadMainImage(files).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          const response = event.body;\n          this.lotForm.controls.image.patchValue(response[CommonConstants.ImageResponsePath]);\n          this.toastrService.success('Photo is uploaded!');\n          this.fileInput.nativeElement.value = '';\n        }\n      });\n    }\n\n    uploadImages(files, index) {\n      if (files.length === 0) return;\n      this.imagesService.uploadImages(files).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          const response = event.body;\n          const myForm = this.imageArray.at(index);\n          myForm.patchValue(response[CommonConstants.ImageResponsePath]);\n          this.toastrService.success('Photo is uploaded!');\n        }\n      });\n    }\n\n    deletePhotoByPath(imagePath, index) {\n      if (!!imagePath) {\n        this.lotService.deletePhoto(imagePath).subscribe(_ => {\n          const form = this.imageArray.at(index);\n          form.patchValue(null);\n          this.toastrService.success('Photo is deleted');\n        });\n      }\n    }\n\n    deleteMainPhoto() {\n      if (!!this.lotForm.controls.image.value) {\n        this.lotService.deletePhoto(this.lotForm.controls.image.value).subscribe(_ => {\n          this.lotForm.controls.image.patchValue(null);\n          this.toastrService.success('Photo is deleted');\n        });\n      }\n    }\n\n  }\n\n  UpdateLotFormComponent.ɵfac = function UpdateLotFormComponent_Factory(t) {\n    return new (t || UpdateLotFormComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.LotService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i5.ImagesService), i0.ɵɵdirectiveInject(i6.AuthService), i0.ɵɵdirectiveInject(i7.AuthorDescriptionService));\n  };\n\n  UpdateLotFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateLotFormComponent,\n    selectors: [[\"app-update-lot-form\"]],\n    viewQuery: function UpdateLotFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"lot-form\"], [1, \"lot-form__general\"], [1, \"toggler\", 3, \"click\"], [1, \"title__collapse-icon\"], [1, \"fa\", 3, \"ngClass\"], [1, \"title__caption\"], [3, \"formGroup\", 4, \"ngIf\"], [1, \"author-opinion\"], [3, \"formGroup\"], [1, \"full-width\"], [1, \"has-tooltip\"], [\"type\", \"text\", \"placeholder\", \"Enter name lot\", \"formControlName\", \"nameLot\"], [\"class\", \"tooltip\", 4, \"ngIf\"], [\"placeholder\", \"Enter description\", \"formControlName\", \"description\"], [\"type\", \"text\", \"formControlName\", \"startPrice\", \"readonly\", \"\", \"awesomeTooltip\", \"You cannot change price\"], [\"type\", \"text\", \"formControlName\", \"currentPrice\", \"readonly\", \"\", \"awesomeTooltip\", \"Current bid\"], [\"type\", \"number\", \"placeholder\", \"Enter year\", \"formControlName\", \"year\"], [1, \"image\"], [3, \"click\", 4, \"ngIf\"], [3, \"src\", 4, \"ngIf\"], [\"type\", \"file\", \"placeholder\", \"Choose file\", \"onclick\", \"this.value=null\", 2, \"display\", \"none\", 3, \"change\"], [\"file\", \"\"], [\"class\", \"btn btn-success\", 3, \"click\", 4, \"ngIf\"], [1, \"mult-images\"], [\"formArrayName\", \"images\", 4, \"ngFor\", \"ngForOf\"], [1, \"images-btn\"], [3, \"click\"], [1, \"btn-submit\"], [3, \"disabled\", \"click\"], [1, \"tooltip\"], [3, \"src\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"formArrayName\", \"images\"], [1, \"mult-image\"], [1, \"cancel\"], [\"type\", \"file\", \"onclick\", \"this.value=null\", 2, \"display\", \"none\", 3, \"change\"], [\"class\", \"upload\", 4, \"ngIf\"], [1, \"upload\"], [\"autosize\", \"\", \"placeholder\", \"Enter description\", \"formControlName\", \"description\", \"contenteditable\", \"\"]],\n    template: function UpdateLotFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_Template_div_click_2_listener() {\n          return ctx.toggleForm();\n        });\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵelement(4, \"i\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 5);\n        i0.ɵɵtext(6, \"Update Lot\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, UpdateLotFormComponent_form_7_Template, 37, 16, \"form\", 6);\n        i0.ɵɵelementStart(8, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function UpdateLotFormComponent_Template_div_click_8_listener() {\n          return ctx.toggleAuthorOpinion();\n        });\n        i0.ɵɵelementStart(9, \"span\", 3);\n        i0.ɵɵelement(10, \"i\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\", 5);\n        i0.ɵɵtext(12, \"Author Description\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵtemplate(14, UpdateLotFormComponent_form_14_Template, 9, 5, \"form\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.isCollapsedForm ? \"fa-angle-right\" : \"fa-angle-down\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !!(ctx.lotForm == null ? null : ctx.lotForm.controls));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", ctx.isCollapsedAuthorOpinion ? \"fa-angle-right\" : \"fa-angle-down\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"@toggle\", ctx.isCollapsedAuthorOpinion ? \"hide\" : \"show\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !!(ctx.authorForm == null ? null : ctx.authorForm.controls));\n      }\n    },\n    dependencies: [i8.AwesomeTooltipDirective, i9.NgClass, i9.NgForOf, i9.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormArrayName, i10.ɵa],\n    styles: [\"[_nghost-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box;outline:none}[_nghost-%COMP%]   .lot-form[_ngcontent-%COMP%]{margin-top:100px;justify-content:center;align-items:center;font-family:Roboto,Helvetica Neue,sans-serif}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]{width:30%;margin:0 auto;justify-content:center;align-items:center}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .text-line[_ngcontent-%COMP%]{font-size:28px;font-weight:600;text-align:left;height:30px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]{position:relative}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]   .tooltip[_ngcontent-%COMP%]{text-align:center;font-size:16px;position:absolute;top:0%;left:50%;transform:translate(-50%);background-color:#292929;color:#fff;padding:4px 6px;border-radius:4px;width:max-content;opacity:0;visibility:hidden}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]:where(:hover, [_ngcontent-%COMP%]:focus-within) > .tooltip[_ngcontent-%COMP%]{opacity:1;visibility:visible}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:40px;padding:12px 20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;border-radius:30px;font-size:20px;margin:8px auto;border:1px solid #ccc}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input.ng-touched.ng-invalid[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea.ng-touched.ng-invalid[_ngcontent-%COMP%]{border:solid red 2px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input.ng-touched.ng-valid[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea.ng-touched.ng-valid[_ngcontent-%COMP%]{border:solid green 2px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{height:150px;padding:8px 18px;resize:none;-moz-border-bottom-colors:none;-moz-border-left-colors:none;-moz-border-right-colors:none;-moz-border-top-colors:none;overflow:hidden}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-top:14px;width:100%;height:auto;border-radius:20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]{align-items:stretch;flex-wrap:wrap;display:flex;justify-content:center;margin-top:10px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]{width:200px;height:200px;margin:5px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]{float:right;position:absolute;top:0;right:10px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-size:30px;border-radius:20px;background:none;color:red}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{cursor:pointer;transform:scale(1.2)}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:200px;height:200px;border-radius:20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .upload[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:200px;height:200px;border-radius:20px;background:black;color:#fff;font-size:30px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .images-btn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .images-btn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .btn-submit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .btn-submit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .toggler[_ngcontent-%COMP%]{margin:10px 0;font-size:28px;border-bottom:3px solid black;line-height:30px;cursor:pointer;-webkit-user-select:none;user-select:none}[_nghost-%COMP%]   .toggler[_ngcontent-%COMP%]   .title__caption[_ngcontent-%COMP%]{color:#000;padding-left:10px}[_nghost-%COMP%]   .toggler[_ngcontent-%COMP%]   .title__collapse-icon[_ngcontent-%COMP%]{display:inline-block;width:8px;color:#000;margin-right:5px}[_nghost-%COMP%]   .author-opinion[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{min-height:200px;resize:vertical;height:auto}\"],\n    data: {\n      animation: [trigger('toggle', [state('hide', style({\n        height: '0px',\n        overflow: 'hidden'\n      })), state('show', style({\n        height: '*'\n      })), transition('hide => show', animate('0.35s ease')), transition('show => hide', animate('0.35s ease'))])]\n    }\n  });\n  return UpdateLotFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}