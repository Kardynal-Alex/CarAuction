{"ast":null,"code":"import { BaseUrl } from '../common/constants/urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LotService = /*#__PURE__*/(() => {\n  class LotService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.apiUrl = BaseUrl.ApiURL + 'lot/';\n      this.uploadApiPhoto = BaseUrl.ApiURL + 'upload/';\n      this.numbersOfImages = 9;\n    }\n\n    createLot(lot) {\n      return this.httpClient.post(this.apiUrl, lot);\n    }\n\n    getAllLots() {\n      return this.httpClient.get(this.apiUrl);\n    }\n\n    getLotsByUserId(userId) {\n      return this.httpClient.get(this.apiUrl + 'getuserlots/' + userId);\n    }\n\n    deleteLotById(lotId) {\n      return this.httpClient.delete(this.apiUrl + lotId);\n    }\n\n    getLotById(lotId) {\n      return this.httpClient.get(this.apiUrl + lotId);\n    }\n\n    getFreshLots() {\n      return this.httpClient.get(this.apiUrl + 'getfreshlots/');\n    }\n\n    getFavoriteUsersLots(userId) {\n      return this.httpClient.get(this.apiUrl + 'favorites/' + userId);\n    }\n\n    getUserBids(id) {\n      return this.httpClient.get(this.apiUrl + 'userbids/' + id);\n    }\n\n    getSoldLots() {\n      return this.httpClient.get(this.apiUrl + 'getsoldlots/');\n    }\n\n    updateLot(lot) {\n      return this.httpClient.put(this.apiUrl, lot);\n    }\n\n    updateLotAfterClosing(lot) {\n      return this.httpClient.put(this.apiUrl + 'closebid/', lot);\n    }\n\n    updateOnlyDateLot(lot) {\n      return this.httpClient.put(this.apiUrl + 'onlydatelot/', lot);\n    }\n\n    deletePhoto(path) {\n      return this.httpClient.delete(this.uploadApiPhoto + '?path=' + path);\n    }\n\n    askOwner(askOwner) {\n      return this.httpClient.post(this.apiUrl + 'askowner/', askOwner);\n    }\n\n    createImgPath(serverPath) {\n      return `https://localhost:44325/${serverPath}`;\n    }\n\n  }\n\n  LotService.ɵfac = function LotService_Factory(t) {\n    return new (t || LotService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LotService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LotService,\n    factory: LotService.ɵfac,\n    providedIn: 'root'\n  });\n  return LotService;\n})();","map":null,"metadata":{},"sourceType":"module"}