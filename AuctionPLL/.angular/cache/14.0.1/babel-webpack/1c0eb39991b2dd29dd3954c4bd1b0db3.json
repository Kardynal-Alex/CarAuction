{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let SortPipe = /*#__PURE__*/(() => {\n  class SortPipe {\n    transform(value, sortOrder = 'asc', sortKey) {\n      sortOrder = sortOrder && sortOrder.toLowerCase();\n      if (!value || sortOrder !== 'asc' && sortOrder !== 'desc') return value;\n      let numberArray = [];\n      let stringArray = [];\n\n      if (!sortKey) {\n        numberArray = value.filter(item => typeof item === 'number').sort();\n        stringArray = value.filter(item => typeof item === 'string').sort();\n      } else {\n        numberArray = value.filter(item => typeof item[sortKey] === 'number').sort((a, b) => a[sortKey] - b[sortKey]);\n        stringArray = value.filter(item => typeof item[sortKey] === 'string').sort((a, b) => {\n          if (a[sortKey] < b[sortKey]) return -1;else if (a[sortKey] > b[sortKey]) return 1;else return 0;\n        });\n      }\n\n      const sorted = numberArray.concat(stringArray);\n      return sortOrder === 'asc' ? sorted : sorted.reverse();\n    }\n\n  }\n\n  SortPipe.ɵfac = function SortPipe_Factory(t) {\n    return new (t || SortPipe)();\n  };\n\n  SortPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"sort\",\n    type: SortPipe,\n    pure: true\n  });\n  SortPipe.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SortPipe,\n    factory: SortPipe.ɵfac\n  });\n  return SortPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}