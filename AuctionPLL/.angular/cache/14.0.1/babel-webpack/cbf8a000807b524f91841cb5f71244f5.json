{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { CommonConstants } from 'src/app/common/constants/common-constants';\nimport { Images } from 'src/app/models/lot-models/images';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/lot.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/services/auth.service\";\nimport * as i6 from \"src/app/services/images.service\";\nimport * as i7 from \"../../../../common/hr/hr.component\";\nimport * as i8 from \"@angular/common\";\nconst _c0 = [\"file\"];\n\nfunction CreateLotFormComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Min length 5 is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Max length is 35 symbols\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Min length 10 is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Max length is 70 symbols\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Min price 1\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Enter correct year\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_p_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" Min value 1806\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateLotFormComponent_button_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.deleteMainPhoto());\n    });\n    i0.ɵɵtext(1, \"Delete photo\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_img_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r12.createImgPath(ctx_r12.lotForm.controls.image.value), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction CreateLotFormComponent_button_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function CreateLotFormComponent_button_34_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      i0.ɵɵnextContext();\n\n      const _r13 = i0.ɵɵreference(33);\n\n      return i0.ɵɵresetView(_r13.click());\n    });\n    i0.ɵɵtext(1, \"Add main image\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateLotFormComponent_div_36_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function CreateLotFormComponent_div_36_div_2_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const i_r21 = i0.ɵɵnextContext().index;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.deletePhotoByPath(ctx_r27.lotForm.controls[\"images\"].at(i_r21).value, i_r21));\n    });\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CreateLotFormComponent_div_36_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function CreateLotFormComponent_div_36_div_3_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const i_r21 = i0.ɵɵnextContext().index;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.removeImage(i_r21));\n    });\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CreateLotFormComponent_div_36_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 24);\n  }\n\n  if (rf & 2) {\n    const i_r21 = i0.ɵɵnextContext().index;\n    const ctx_r24 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r24.createImgPath(ctx_r24.lotForm.controls[\"images\"].at(i_r21).value), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction CreateLotFormComponent_div_36_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateLotFormComponent_div_36_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      i0.ɵɵnextContext();\n\n      const _r25 = i0.ɵɵreference(6);\n\n      return i0.ɵɵresetView(_r25.click());\n    });\n    i0.ɵɵtext(2, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CreateLotFormComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27);\n    i0.ɵɵtemplate(2, CreateLotFormComponent_div_36_div_2_Template, 3, 0, \"div\", 28);\n    i0.ɵɵtemplate(3, CreateLotFormComponent_div_36_div_3_Template, 3, 0, \"div\", 28);\n    i0.ɵɵtemplate(4, CreateLotFormComponent_div_36_img_4_Template, 1, 1, \"img\", 13);\n    i0.ɵɵelementStart(5, \"input\", 29, 15);\n    i0.ɵɵlistener(\"change\", function CreateLotFormComponent_div_36_Template_input_change_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r37);\n      const i_r21 = restoredCtx.index;\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.uploadImages($event, i_r21));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, CreateLotFormComponent_div_36_div_7_Template, 3, 0, \"div\", 30);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r21 = ctx.index;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.lotForm.controls[\"images\"].at(i_r21).value);\n  }\n}\n\nexport let CreateLotFormComponent = /*#__PURE__*/(() => {\n  class CreateLotFormComponent {\n    constructor(toastrService, lotService, router, formBuilder, authService, imagesService) {\n      this.toastrService = toastrService;\n      this.lotService = lotService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.imagesService = imagesService;\n      this.saved = false;\n    }\n\n    get imageArray() {\n      return this.lotForm.get('images');\n    }\n\n    ngOnInit() {\n      this.initForm();\n    }\n\n    initForm() {\n      this.lotForm = this.formBuilder.group({\n        nameLot: [null, [Validators.required, Validators.minLength(5), Validators.maxLength(35)]],\n        description: [null, [Validators.required, Validators.minLength(10), Validators.maxLength(70)]],\n        startPrice: [null, [Validators.required, Validators.pattern('^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$'), Validators.min(1)]],\n        year: [null, [Validators.required, Validators.pattern('[0-9]{4}'), Validators.min(1806)]],\n        image: [null, Validators.required],\n        images: this.formBuilder.array([])\n      });\n    }\n\n    addImage() {\n      if (this.lotService.numbersOfImages !== this.imageArray.controls.length) {\n        this.imageArray.push(new UntypedFormControl(null, [Validators.required]));\n      }\n    }\n\n    removeImage(index) {\n      this.imageArray.removeAt(index);\n      this.lotForm.markAsDirty();\n    }\n\n    createLot() {\n      const userId = this.authService.getUserIdFromToken();\n      const lot = {\n        id: 0,\n        nameLot: this.lotForm.controls.nameLot.value,\n        startPrice: this.lotForm.controls.startPrice.value,\n        isSold: false,\n        image: this.lotForm.controls.image.value,\n        description: this.lotForm.controls.description.value,\n        userId: userId,\n        startDateTime: new Date(Date.now()),\n        currentPrice: this.lotForm.controls.startPrice.value,\n        year: this.lotForm.controls.year.value,\n        user: null,\n        lotState: {\n          id: 0,\n          ownerId: userId,\n          futureOwnerId: userId,\n          countBid: 0,\n          lotId: 0\n        },\n        images: this.getImages()\n      };\n      this.lotService.createLot(lot).subscribe(_ => {\n        this.toastrService.success('Successfully added!');\n        this.saved = true;\n        this.router.navigate(['/cabinet/userlots']);\n      }, _ => {\n        this.toastrService.error('Something went wrong!');\n      });\n    }\n\n    getImages() {\n      let images = new Images();\n      let index = 0;\n\n      for (let image of this.lotForm.controls.images.value) {\n        images['image' + (index + 1)] = image;\n        index++;\n      }\n\n      return images;\n    }\n\n    canDeactivate() {\n      if (!this.saved) {\n        return confirm('Are you want to leave the page?');\n      } else {\n        return true;\n      }\n    }\n\n    createImgPath(serverPath) {\n      return this.lotService.createImgPath(serverPath);\n    }\n\n    uploadMainImage(files) {\n      if (files.length === 0) return;\n      this.imagesService.uploadMainImage(files).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          const response = event.body;\n          this.lotForm.controls.image.patchValue(response[CommonConstants.ImageResponsePath]);\n          this.toastrService.success('Photo is uploaded!');\n          this.fileInput.nativeElement.value = '';\n        }\n      });\n    }\n\n    uploadImages(files, index) {\n      if (files.length === 0) return;\n      this.imagesService.uploadImages(files).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          const response = event.body;\n          const myForm = this.imageArray.at(index);\n          myForm.patchValue(response[CommonConstants.ImageResponsePath]);\n          this.toastrService.success('Photo is uploaded!');\n        }\n      });\n    }\n\n    deletePhotoByPath(imagePath, index) {\n      if (!!imagePath) {\n        this.lotService.deletePhoto(imagePath).subscribe(_ => {\n          const form = this.imageArray.at(index);\n          form.patchValue(null);\n          this.toastrService.success('Photo is deleted');\n        });\n      }\n    }\n\n    deleteMainPhoto() {\n      if (!!this.lotForm.controls.image.value) {\n        this.lotService.deletePhoto(this.lotForm.controls.image.value).subscribe(_ => {\n          this.lotForm.controls.image.patchValue(null);\n          this.toastrService.success('Photo is deleted');\n        });\n      }\n    }\n\n  }\n\n  CreateLotFormComponent.ɵfac = function CreateLotFormComponent_Factory(t) {\n    return new (t || CreateLotFormComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.LotService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.ImagesService));\n  };\n\n  CreateLotFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateLotFormComponent,\n    selectors: [[\"app-create-lot-form\"]],\n    viewQuery: function CreateLotFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 43,\n    vars: 17,\n    consts: [[1, \"lot-form\"], [1, \"lot-form__general\"], [1, \"text-line\"], [3, \"formGroup\"], [1, \"full-width\"], [1, \"has-tooltip\"], [\"type\", \"text\", \"placeholder\", \"Enter name lot\", \"formControlName\", \"nameLot\"], [\"class\", \"tooltip\", 4, \"ngIf\"], [\"placeholder\", \"Enter description\", \"formControlName\", \"description\"], [\"type\", \"number\", \"placeholder\", \"Enter price\", \"formControlName\", \"startPrice\"], [\"type\", \"number\", \"placeholder\", \"Enter year\", \"formControlName\", \"year\"], [1, \"image\"], [3, \"click\", 4, \"ngIf\"], [3, \"src\", 4, \"ngIf\"], [\"type\", \"file\", \"placeholder\", \"Choose file\", \"onclick\", \"this.value=null\", 2, \"display\", \"none\", 3, \"change\"], [\"file\", \"\"], [\"class\", \"btn btn-success\", 3, \"click\", 4, \"ngIf\"], [1, \"mult-images\"], [\"formArrayName\", \"images\", 4, \"ngFor\", \"ngForOf\"], [1, \"images-btn\"], [3, \"click\"], [1, \"btn-submit\"], [3, \"disabled\", \"click\"], [1, \"tooltip\"], [3, \"src\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"formArrayName\", \"images\"], [1, \"mult-image\"], [\"class\", \"cancel\", 4, \"ngIf\"], [\"type\", \"file\", \"onclick\", \"this.value=null\", 2, \"display\", \"none\", 3, \"change\"], [\"class\", \"upload\", 4, \"ngIf\"], [1, \"cancel\"], [1, \"upload\"]],\n    template: function CreateLotFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r38 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Create Lot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-hr\");\n        i0.ɵɵelementStart(5, \"form\", 3)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, CreateLotFormComponent_p_9_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(10, CreateLotFormComponent_p_10_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(11, CreateLotFormComponent_p_11_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5);\n        i0.ɵɵelement(14, \"textarea\", 8);\n        i0.ɵɵtemplate(15, CreateLotFormComponent_p_15_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(16, CreateLotFormComponent_p_16_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(17, CreateLotFormComponent_p_17_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5);\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵtemplate(21, CreateLotFormComponent_p_21_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(22, CreateLotFormComponent_p_22_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"div\", 5);\n        i0.ɵɵelement(25, \"input\", 10);\n        i0.ɵɵtemplate(26, CreateLotFormComponent_p_26_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(27, CreateLotFormComponent_p_27_Template, 2, 0, \"p\", 7);\n        i0.ɵɵtemplate(28, CreateLotFormComponent_p_28_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 11);\n        i0.ɵɵtemplate(30, CreateLotFormComponent_button_30_Template, 2, 0, \"button\", 12);\n        i0.ɵɵtemplate(31, CreateLotFormComponent_img_31_Template, 1, 1, \"img\", 13);\n        i0.ɵɵelementStart(32, \"input\", 14, 15);\n        i0.ɵɵlistener(\"change\", function CreateLotFormComponent_Template_input_change_32_listener() {\n          i0.ɵɵrestoreView(_r38);\n\n          const _r13 = i0.ɵɵreference(33);\n\n          return i0.ɵɵresetView(ctx.uploadMainImage(_r13.files));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, CreateLotFormComponent_button_34_Template, 2, 0, \"button\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 17);\n        i0.ɵɵtemplate(36, CreateLotFormComponent_div_36_Template, 8, 4, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 19)(38, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function CreateLotFormComponent_Template_button_click_38_listener() {\n          return ctx.addImage();\n        });\n        i0.ɵɵtext(39, \"Add Image\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 21)(41, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function CreateLotFormComponent_Template_button_click_41_listener() {\n          return ctx.createLot();\n        });\n        i0.ɵɵtext(42, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.lotForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.nameLot.errors == null ? null : ctx.lotForm.controls.nameLot.errors.required) && ctx.lotForm.controls.nameLot.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.nameLot.errors == null ? null : ctx.lotForm.controls.nameLot.errors.minlength) && ctx.lotForm.controls.nameLot.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.nameLot.errors == null ? null : ctx.lotForm.controls.nameLot.errors.maxlength) && ctx.lotForm.controls.nameLot.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.description.errors == null ? null : ctx.lotForm.controls.description.errors.required) && ctx.lotForm.controls.description.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.description.errors == null ? null : ctx.lotForm.controls.description.errors.minlength) && ctx.lotForm.controls.description.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.description.errors == null ? null : ctx.lotForm.controls.description.errors.maxlength) && ctx.lotForm.controls.description.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.startPrice.errors == null ? null : ctx.lotForm.controls.startPrice.errors.required) && ctx.lotForm.controls.startPrice.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.startPrice.errors == null ? null : ctx.lotForm.controls.startPrice.errors.pattern) && ctx.lotForm.controls.startPrice.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.year.errors == null ? null : ctx.lotForm.controls.year.errors.required) && ctx.lotForm.controls.year.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.year.errors == null ? null : ctx.lotForm.controls.year.errors.pattern) && ctx.lotForm.controls.year.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lotForm.controls.year.errors == null ? null : ctx.lotForm.controls.year.errors.min) && ctx.lotForm.controls.year.touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !!ctx.lotForm.controls.image.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !!ctx.lotForm.controls.image.value);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.lotForm.controls.image.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.imageArray.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.lotForm.invalid);\n      }\n    },\n    dependencies: [i7.HrComponent, i8.NgForOf, i8.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormArrayName],\n    styles: [\"[_nghost-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box;outline:none}[_nghost-%COMP%]   .lot-form[_ngcontent-%COMP%]{margin-top:100px;justify-content:center;align-items:center;font-family:Roboto,Helvetica Neue,sans-serif}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]{width:30%;margin:0 auto;justify-content:center;align-items:center}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .text-line[_ngcontent-%COMP%]{font-size:28px;font-weight:600;text-align:left;height:30px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]{position:relative}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]   .tooltip[_ngcontent-%COMP%]{text-align:center;font-size:16px;position:absolute;top:0%;left:50%;transform:translate(-50%);background-color:#292929;color:#fff;padding:4px 6px;border-radius:4px;width:max-content;opacity:0;visibility:hidden}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   .has-tooltip[_ngcontent-%COMP%]:where(:hover, [_ngcontent-%COMP%]:focus-within) > .tooltip[_ngcontent-%COMP%]{opacity:1;visibility:visible}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:40px;padding:12px 20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;border-radius:30px;font-size:20px;margin:8px auto;border:1px solid #ccc}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input.ng-touched.ng-invalid[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea.ng-touched.ng-invalid[_ngcontent-%COMP%]{border:solid red 2px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   input.ng-touched.ng-valid[_ngcontent-%COMP%], [_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea.ng-touched.ng-valid[_ngcontent-%COMP%]{border:solid green 2px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{height:150px;padding:8px 18px;resize:none;-moz-border-bottom-colors:none;-moz-border-left-colors:none;-moz-border-right-colors:none;-moz-border-top-colors:none;overflow:hidden}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-top:14px;width:100%;height:auto;border-radius:20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]{align-items:stretch;flex-wrap:wrap;display:flex;justify-content:center;margin-top:10px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]{width:200px;height:200px;margin:5px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]{float:right;position:absolute;top:0;right:10px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-size:30px;border-radius:20px;background:none;color:red}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{cursor:pointer;transform:scale(1.2)}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:200px;height:200px;border-radius:20px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .mult-images[_ngcontent-%COMP%]   .mult-image[_ngcontent-%COMP%]   .upload[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:200px;height:200px;border-radius:20px;background:black;color:#fff;font-size:30px}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .images-btn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .images-btn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .btn-submit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:14px auto;border-radius:30px;font-size:20px;background-color:#000;padding:7px 20px;color:#fff}[_nghost-%COMP%]   .lot-form__general[_ngcontent-%COMP%]   .btn-submit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05);opacity:.7;cursor:pointer}\"]\n  });\n  return CreateLotFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}