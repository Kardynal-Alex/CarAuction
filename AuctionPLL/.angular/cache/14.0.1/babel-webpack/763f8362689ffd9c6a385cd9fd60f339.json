{"ast":null,"code":"import { ErrorMessages } from 'src/app/common/constants/error-messages';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction ResetPasswordComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Min length 6\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"At least one letter and one number\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(toastrService, authService, router, acticeRoute) {\n      this.toastrService = toastrService;\n      this.authService = authService;\n      this.router = router;\n      this.acticeRoute = acticeRoute;\n    }\n\n    ngOnInit() {\n      this.token = this.acticeRoute.snapshot.queryParams['token'];\n      this.email = this.acticeRoute.snapshot.queryParams['email'];\n    }\n\n    resetPassword(form) {\n      const resetPass = {\n        password: form.value.newPassword,\n        token: this.token,\n        email: this.email\n      };\n      this.authService.resetPassword(resetPass).subscribe(_ => {\n        this.toastrService.success('Password is updated!');\n        this.router.navigate(['']);\n      }, _ => {\n        this.toastrService.error(ErrorMessages.Error);\n        this.router.navigate(['']);\n      });\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"form\"], [1, \"reset-from\"], [\"method\", \"post\", 3, \"ngSubmit\"], [\"resetForm\", \"ngForm\"], [\"type\", \"password\", \"placeholder\", \"Enter New Password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"pattern\", \"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,}$\", \"minlength\", \"6\", \"ngModel\", \"\", \"required\", \"\"], [\"newPassword\", \"ngModel\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"submit\"], [1, \"error\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return i0.ɵɵresetView(ctx.resetPassword(_r0));\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"p\");\n        i0.ɵɵtext(6, \"Create new password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4, 5);\n        i0.ɵɵtemplate(9, ResetPasswordComponent_div_9_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(10, ResetPasswordComponent_div_10_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(11, ResetPasswordComponent_div_11_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(8);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.required) && _r1.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.minlength) && _r1.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.pattern) && _r1.touched);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm, i5.NgIf],\n    styles: [\"[_nghost-%COMP%]   body[_ngcontent-%COMP%]{font-family:Arial,Helvetica,sans-serif}[_nghost-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box;outline:none}[_nghost-%COMP%]   .form[_ngcontent-%COMP%]{margin:10% 40%;justify-content:center;text-align:center;align-items:center}[_nghost-%COMP%]   .reset-from[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .reset-from[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:80%;padding:12px 20px;margin:8px auto;display:inline-block;border:1px solid #ccc;box-sizing:border-box;border-radius:30px;font-size:18px;text-align:center}[_nghost-%COMP%]   .reset-from[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#04aa6d;color:#fff;padding:14px 20px;margin:8px 0;border:none;cursor:pointer;width:80%;font-size:18px;border-radius:30px}[_nghost-%COMP%]   .reset-from[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:20px;font-weight:600}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{background-color:#04aa6d;color:#fff;float:left;width:80%;margin:0 10%;border-radius:20px;font-size:18px;text-align:center}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}