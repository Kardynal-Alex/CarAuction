{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { UntypedFormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/lot.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction TestComponent_div_3_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"img\", 10);\n  }\n\n  if (rf & 2) {\n    const i_r2 = i0.ÉµÉµnextContext().index;\n    const ctx_r3 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµproperty(\"src\", ctx_r3.createImgPath(ctx_r3.imageForm.controls[\"images\"].at(i_r2).value), i0.ÉµÉµsanitizeUrl);\n  }\n}\n\nfunction TestComponent_div_3_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ÉµÉµgetCurrentView();\n\n    i0.ÉµÉµelementStart(0, \"button\", 0);\n    i0.ÉµÉµlistener(\"click\", function TestComponent_div_3_button_7_Template_button_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r9);\n      const i_r2 = i0.ÉµÉµnextContext().index;\n      const ctx_r7 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r7.deletePhotoByPath(ctx_r7.imageForm.controls[\"images\"].at(i_r2).value, i_r2));\n    });\n    i0.ÉµÉµtext(1, \"delete\");\n    i0.ÉµÉµelementEnd();\n  }\n}\n\nfunction TestComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ÉµÉµgetCurrentView();\n\n    i0.ÉµÉµelementStart(0, \"div\", 3);\n    i0.ÉµÉµtemplate(1, TestComponent_div_3_img_1_Template, 1, 1, \"img\", 4);\n    i0.ÉµÉµelementStart(2, \"input\", 5, 6);\n    i0.ÉµÉµlistener(\"change\", function TestComponent_div_3_Template_input_change_2_listener($event) {\n      const restoredCtx = i0.ÉµÉµrestoreView(_r11);\n      const i_r2 = restoredCtx.index;\n      const ctx_r10 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r10.onFileChange($event, i_r2, i_r2));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(4, \"button\", 7);\n    i0.ÉµÉµlistener(\"click\", function TestComponent_div_3_Template_button_click_4_listener() {\n      i0.ÉµÉµrestoreView(_r11);\n\n      const _r4 = i0.ÉµÉµreference(3);\n\n      return i0.ÉµÉµresetView(_r4.click());\n    });\n    i0.ÉµÉµtext(5, \"upload\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(6, \"div\", 8);\n    i0.ÉµÉµtemplate(7, TestComponent_div_3_button_7_Template, 2, 0, \"button\", 9);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(8, \"button\", 0);\n    i0.ÉµÉµlistener(\"click\", function TestComponent_div_3_Template_button_click_8_listener() {\n      const restoredCtx = i0.ÉµÉµrestoreView(_r11);\n      const i_r2 = restoredCtx.index;\n      const ctx_r13 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r13.removeImage(i_r2));\n    });\n    i0.ÉµÉµtext(9, \"delete component\");\n    i0.ÉµÉµelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", !!ctx_r0.imageForm.controls[\"images\"].at(i_r2).value);\n    i0.ÉµÉµadvance(6);\n    i0.ÉµÉµproperty(\"ngIf\", !!ctx_r0.imageForm.controls[\"images\"].at(i_r2).value);\n  }\n}\n\nexport let TestComponent = /*#__PURE__*/(() => {\n  class TestComponent {\n    constructor(lotService, httpClient, toastrService, fb) {\n      this.lotService = lotService;\n      this.httpClient = httpClient;\n      this.toastrService = toastrService;\n      this.fb = fb;\n      this.numbers = [1, 2, 3];\n      /*   this.myForm = new FormGroup({\r\n          image1: new FormControl(null),\r\n          image2: new FormControl(null),\r\n          image3: new FormControl(null)\r\n        }); */\n\n      this.imageForm = this.fb.group({\n        images: this.fb.array([])\n      });\n    }\n\n    get imageArray() {\n      return this.imageForm.get('images');\n    }\n\n    t() {\n      return this.imageForm.get('images');\n    }\n\n    ngOnInit() {\n      /* this.images = {\r\n        image1: '', image2: '', image3: '', image4: '', image5: '', image6: '', image7: '', image8: '', image9: '', id: 0\r\n      }; */\n    }\n\n    addImage() {\n      this.imageArray.push(new UntypedFormControl(null));\n      console.log(this.imageForm.value); //(<FormArray>this.myForm.controls[\"images\"]).push(new FormControl());\n    }\n    /* images: Images; */\n\n\n    createImgPath(serverPath) {\n      if (!!serverPath) return this.lotService.createImgPath(serverPath);\n    }\n\n    onSubmit() {}\n\n    onFileChange(event, field, number) {\n      if (event.length === 0) return;\n      let uploadApiPhoto = 'https://localhost:44325/api/upload'; //let fileToUpload=<File>files[0];\n\n      let fileToUpload = event.target.files[0];\n      let formData = new FormData();\n      formData.append('file', fileToUpload, fileToUpload.name);\n      this.httpClient.post(uploadApiPhoto, formData, {\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          this.response = event.body;\n          console.log(this.response['dbPath']);\n          const myForm = this.imageArray.at(number);\n          myForm.patchValue(this.response['dbPath']);\n          this.toastrService.success('Photo is uploaded!');\n        }\n      });\n    }\n\n    removeImage(index) {\n      console.log(\"ðŸš€ ~ file: test.component.ts ~ line 84 ~ TestComponent ~ removeImage ~ index\", index);\n      this.imageArray.removeAt(index);\n      this.imageForm.markAsDirty();\n    }\n\n    deletePhotoByPath(imagePath, number) {\n      if (!!imagePath) {\n        this.lotService.deletePhoto(imagePath).subscribe(response => {\n          this.toastrService.success(\"Photo is deleted\");\n          const myForm = this.imageArray.at(number);\n          myForm.patchValue(null);\n        });\n      }\n    }\n\n  }\n\n  TestComponent.Éµfac = function TestComponent_Factory(t) {\n    return new (t || TestComponent)(i0.ÉµÉµdirectiveInject(i1.LotService), i0.ÉµÉµdirectiveInject(i2.HttpClient), i0.ÉµÉµdirectiveInject(i3.ToastrService), i0.ÉµÉµdirectiveInject(i4.UntypedFormBuilder));\n  };\n\n  TestComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: TestComponent,\n    selectors: [[\"app-test\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[3, \"click\"], [3, \"formGroup\"], [\"formArrayName\", \"images\", \"class\", \"image\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"images\", 1, \"image\"], [3, \"src\", 4, \"ngIf\"], [\"type\", \"file\", \"onclick\", \"this.value=null\", 3, \"change\"], [\"file\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"cancel\", 2, \"margin-top\", \"20px\"], [3, \"click\", 4, \"ngIf\"], [3, \"src\"]],\n    template: function TestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"button\", 0);\n        i0.ÉµÉµlistener(\"click\", function TestComponent_Template_button_click_0_listener() {\n          return ctx.addImage();\n        });\n        i0.ÉµÉµtext(1, \"Add image\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(2, \"form\", 1);\n        i0.ÉµÉµtemplate(3, TestComponent_div_3_Template, 10, 2, \"div\", 2);\n        i0.ÉµÉµelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.imageForm);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.imageArray.controls);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i4.ÉµNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormArrayName],\n    styles: [\"[_nghost-%COMP%]   .image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100px;height:100px}\"]\n  });\n  return TestComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}